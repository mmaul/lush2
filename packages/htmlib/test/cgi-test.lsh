#!/bin/sh
exec lush  "$0" "$@"
!#

#? (read-query-string)
;; Parses QUERY_STRING environmental variable and returns alist of key value pairs
;; TODO: handle %codes, handle multiline select
(defun read-query-string ()
  (mapcar (lambda (q) (str-split q "=")) (str-split (getenv "QUERY_STRING") "&")))

(printf "Content-type: text/html\n\n")

(printf "<html><body><h2>Lush CGI Test.</h2>\n")
(printf "<a href='cgi.lsh?Test=1&val=hello_world'>Test QUERT_STINRG</a>")

(printf "<hr><h3>Form Test 1</h3><form><input name='Test' type='text' value='form test 1'>")
(printf "<input type='submit' name='submit' value='submit'/></form>")


(printf "<hr><h3>Form Test 2</h3><form><textarea name='Test' rows='3' cols='10'>form test 1</textarea>")
(printf "<input type='submit' name='submit' value='submit'/></form>")

(printf "<hr><h3>Form Test 3</h3><form>")
(printf "<select name='Test'><option>form test 3</option><option>form test 3 too</option></select>")
(printf "<input type='submit' name='submit' value='submit'/></form>")

(printf "<hr><h3>Form Test 4</h3><form>")
(printf "<input type='radio' name='Test' value='one'> one</input>") 
(printf "<input type='radio' name='Test' value='two'> two</input>") 
(printf "<input type='radio' name='Test' value='three'> three</input>") 
(printf "<input type='radio' name='Test' value='four' checked> four</input>") 
(printf "<input type='radio' name='Test' value='five'> five</input>") 
(printf "<input type='submit' value='submit'></input>") 

(printf "<hr><h3>Form Test 5</h3><form>")
(printf "<select name='Test' multiple='1' size='2'><option>form test 5</option><option>form test 5 too</option></select>")
(printf "<input type='submit' name='submit' value='submit'/></form>")

(printf "<hr><h3>Form Test 5 (POST)</h3><form method='post'><textarea name='Test' rows='3' cols='10'>form test 1</textarea>")
(printf "<input type='submit' name='submit' value='submit'/></form>")


(printf "<hr/>")
(let ((query-string (getenv "QUERY_STRING")))
 (printf "QUERY_STRING=%s" query-string))
(let ((query (read-query-string) ))
(print "<pre>|" query "  |  " (assoc "Test" query) "|</pre>"))

(printf "<hr/><h4>POST parameters</h4><pre>")
(while (<> (skip-char) "\e")
    (let ((v (read-string))) (printf "%s" v))
)
;; Well this is weird read-string steals input from the reader
;; What is the deal with that. Probably due to forcing lush into
;; interactive mode with -q hack

